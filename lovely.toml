[manifest]
version = "1.0.0"
dump_lua = true
priority = 0

[[patches]]
[patches.pattern]
target = "game.lua"
pattern = "self.SPEEDFACTOR = 1"
position = "after"
payload = "initSteamodded()"
match_indent = true
overwrite = false

[[patches]]
[patches.copy]
target = "main.lua"
position = "append"
sources = [
    "core/core.lua",
    "core/deck.lua",
    "core/joker.lua",
    "core/r_blind.lua",
    "core/sound.lua",
    "core/sprite.lua",
    "core/suit.lua",
    "core/tarot.lua",
    "core/voucher.lua",
    "core/planet.lua",
    "core/spectral.lua",
    "core/seal.lua",
    "core/StackTracePlus.lua",
    "debug/debug.lua",
    "loader/loader.lua",
]

#Sticker API
#generate_UIBox_ability_table()
[[patches]]
[patches.regex]
target = "card.lua"
pattern = "(?<indent>[\t ]*)if self.sticker then loc_vars = loc_vars or \\{}; loc_vars.sticker=self.sticker end"
position = "before"
line_prepend = "$indent"
payload = '''
for k, v in pairs(SMODS.Stickers) do
	if self.ability[v.label] then
        if v.set_badges and type(v.set_badges) == 'function' then v.set_badges(self, badges) end
    end
end
'''

#generate_card_ui()
[[patches]]
[patches.regex]
target = "functions/common_events.lua"
pattern = "(?<indent>[\t ]*)if main_end then"
position = "before"
line_prepend = "$indent"
payload = '''
if first_pass and not (_c.set == 'Edition') and badges and next(badges) then
	for k, v in ipairs(badges) do
        if SMODS.Stickers[v] and SMODS.Stickers[v].set_tooltip and type(SMODS.Stickers[v].set_tooltip) == 'function' then SMODS.Stickers[v].set_tooltip(_c, info_queue) end
    end
end
'''
